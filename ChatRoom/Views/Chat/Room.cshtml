@model string
<h1 class="text-center">@ChatRoom.Controllers.ChatController.Rooms.GetValueOrDefault(Model)</h1>
<style>
    #chatContainer {
        max-width: 600px;
        margin: auto;
        margin-top: 50px;
    }

    .card {
        border: none;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .card-header {
        background-color: #343a40;
        color: white;
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;
        text-align: center;
        font-weight: bold;
    }

    #messagesList {
        height: 300px;
        overflow-y: auto;
        padding: 10px;
        background-color: #f8f9fa;
        border-bottom-left-radius: 10px;
        border-bottom-right-radius: 10px;
    }

    .message {
        margin-bottom: 10px;
        display: flex;
        flex-direction: row;
        align-items: center;
        width: 100%;
        gap:7px;
    }

        .message .text {
            padding: 10px;
            border-radius: 15px;
            background-color: #e9ecef;
            max-width: 70%;
        }

        .message.my-message {
            justify-content: flex-end;
            align-items: baseline;
        }

            .message.my-message .text {
                background-color: #d4edda;
            }

    .input-group {
        border-top: 1px solid #ccc;
        padding: 10px;
        background-color: #fff;
        border-bottom-left-radius: 10px;
        border-bottom-right-radius: 10px;
    }
</style>





<div id="chatContainer" class="container">
    <div class="card">
        <div class="card-header text-center">Chat</div>
        <ul id="messagesList" class="list-unstyled card-body"></ul>
        <div class="input-group">
            <input type="text" id="user" class="form-control" placeholder="Name">
            <input type="text" id="message" class="form-control" placeholder="Message" onkeypress="checkEnter(event)">
            <button class="btn btn-success" id="btnSend">Send</button>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <div id="messages"></div>
        </div>
        <div class="col-6">
            <div id="notifications"></div>
        </div>
    </div>
</div>

<script src="/lib/microsoft/signalr//dist/browser/signalr.min.js"></script>
<script>
    var connection = new signalR.HubConnectionBuilder().withUrl("/chathub").build();
    connection.start().then(() => {
        connection.invoke("JoinRoom", "@Model")
    }).catch((e) => console.error(e));

    document.getElementById("btnSend").addEventListener("click", (event) => {
        event.preventDefault();
        let room = "@Model";
        let user = document.getElementById("user").value;
        let message = document.getElementById("message").value;

        connection.invoke("SendMessage", room, user, message).catch((err) => console.error(err.toString()));

        document.getElementById("message").value = "";
        document.getElementById("message").focus();
    });

    connection.on("ReceiveMessage", (user, message) => {
        let currentUser = document.getElementById("user").value;
        const li = document.createElement("li");
        li.classList.add("message");
        if (user === currentUser) {
            li.classList.add("my-message");
            li.innerHTML = `<span class="text">${message}</span>`;
        } else{
            li.innerHTML = `<span class="user"><b>${user}</b></span><span class="text">${message}</span>`;
        }
        document.getElementById("messagesList").appendChild(li);
        document.getElementById("messagesList").scrollTop = document.getElementById("messagesList").scrollHeight;
    });
    connection.on("NewPerson", (message) => {
        var message = "<div><b>" + message + "</b></div>";
        document.getElementById("messages").innerHTML = message + document.getElementById("messages").innerHTML;
    });
</script>